function likePost(n,t){$.ajax({type:"GET",url:"/Posts/LikePost",data:{postId:n},dataType:"json",success:function(i){i?(console.log("User liked post."),updatePostLikesCount(n,t)):console.log("Unsuccessful attempt at liking a post.")}})}function dislikePost(n,t){$.ajax({type:"GET",url:"/Posts/DislikePost",data:{postId:n},dataType:"json",success:function(i){i?(console.log("User disliked post."),updatePostLikesCount(n,t)):console.log("Unsuccessful attempt at disliking a post.")}})}function updatePostLikesCount(n,t){$.ajax({type:"GET",url:"/Posts/GetPostLikesCount",data:{postId:n},dataType:"json",success:function(n){n!=-1?t.querySelector("#postLikesCount").textContent=`Like(${n})`:console.log("Unsuccessful attempt at updating post likes count.")}})}function imageIsLoaded(n){$("#inner").append('<img width="125px" height="150px" style="margin-top:5px; margin-bottom:5px" src='+n.target.result+">")}document.querySelector("#submitPost").addEventListener("click",()=>{document.querySelector("#postContent").value==""&&alert("You cannot create an empty post.")});let btns=Array.from(document.querySelectorAll("#editPostButton"));btns.forEach(n=>n.addEventListener("click",n=>{let t=n.currentTarget.parentNode.parentNode.parentNode.parentNode.parentNode,i=t.querySelector("p#content").textContent,r=n.currentTarget.querySelector("#hiddenId").textContent;document.querySelector("#modalArea").textContent=i;document.querySelector("#postId").value=r}));let likeButtons=[...document.querySelectorAll("#likeButton")];likeButtons.forEach(n=>n.addEventListener("click",n=>{let t=n.currentTarget,i=t.attributes.itemid.value,r=t.parentNode;t.attributes.fill.value=="none"?(t.attributes.fill.value="red",likePost(i,r)):(t.attributes.fill.value="none",dislikePost(i,r))}));let pic=document.querySelector("#pic");const textArea=document.querySelector("#postContent");pic.addEventListener("click",()=>{const n=document.querySelector("#inputFile");n.click();console.log("clicked")});$(function(){$(":file").change(function(){var n,t;if(this.files&&this.files[0])for(n=0;n<this.files.length;n++){if(!this.files[0].name.match(/.(jpg|jpeg|png|gif)$/i)){alert("not an image");return}t=new FileReader;t.onload=imageIsLoaded;t.readAsDataURL(this.files[n])}})});